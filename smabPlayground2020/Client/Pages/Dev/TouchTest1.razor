@page "/touchtest1"

<p class="alert alert-info">@message</p>

<div class="card" style="width: 18rem; overscroll-behavior: contain;" @ontouchstart="HandleTouchStart" @ontouchend="HandleTouchEnd" @onkeypress:preventDefault="true">
    <img class="card-img-top" src="https://via.placeholder.com/286x180.png" alt="Card image cap">
    <div class="card-body">
        <h5 class="card-title">Card title</h5>
        <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
        <a href="#" class="btn btn-primary">Go somewhere</a>
    </div>
</div>

@code {
    // https://github.com/EdCharbeneau/BlazorPowerHour/issues/2
    // http://www.javascriptkit.com/javatutors/touchevents2.shtml
    // https://stackoverflow.com/questions/29008194/disabling-androids-chrome-pull-down-to-refresh-feature

    (TouchPoint ReferencePoint, DateTime StartTime) startPoint;

    string message = "touch to begin";

    void HandleTouchStart(TouchEventArgs t)
    {
        startPoint.ReferencePoint = t.TargetTouches[0];
        startPoint.StartTime = DateTime.Now;
    }

    void HandleTouchEnd(TouchEventArgs t)
    {
        const double swipeThreshold = 0.8;

        if (startPoint.ReferencePoint is null)
        {
            return;
        }

        try
        {

            var endReferencePoint = t.ChangedTouches[0];

            var diffX = startPoint.ReferencePoint.ClientX - endReferencePoint.ClientX;
            var diffY = startPoint.ReferencePoint.ClientY - endReferencePoint.ClientY;
            var diffTime = DateTime.Now - startPoint.StartTime;
            var velocityX = Math.Abs(diffX / diffTime.Milliseconds);
            var velocityY = Math.Abs(diffY / diffTime.Milliseconds);

    //var run = Math.Abs(diffX);
    //var rise = Math.Abs(diffY);
    //var ang = Math.Atan2(rise, run) * (180/Math.PI);
    //
    //if (ang > 10 && ang < 80)
    //{
    //    message = "diagonal";
    //}

            if (velocityX < swipeThreshold && velocityY < swipeThreshold) return;
            if (Math.Abs(velocityX - velocityY) < .5) return;
            
            if (velocityX >= swipeThreshold)
            {
                message = diffX < 0 ? "right" : "left";
            }
            if (velocityY >= swipeThreshold)
            {
                message = diffY < 0 ? "down" : "up";
            }
        }

        catch (Exception e)
        {
            message = e.Message;
        }
    }

}