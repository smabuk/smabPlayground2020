@page "/plex/details/{Id:int}"
@using smabPlayground2020.Shared.PlexInfo.Models
@using Syncfusion.Blazor.Cards
@inject PlexInfoClient plexClient

@if (info == null)
{
    <p><em>Loading... item @Id</em></p>
}
else
{
    <div class="card">
        <div class="card-header movie-header">
            <div class="movie-header-thumbnail">
                <img src="/PlexInfo/Photo?url=@(info.Thumb)&width=235&height=353" alt="Thumbnail">
            </div>
            <div class="movie-header-info">
                <div class="movie-header-title"><h1 class="card-title">@info.Title</h1></div>
                <div class="movie-header-info-lh">
                    <div class="card-title">@info.Year</div>
                    <div>@(info.Duration / 60000) min @info.ContentRating</div>
                </div>
                <div class="movie-header-info-rh">
                    <div class="card-title">@info.Rating</div>
                </div>
                <hr />
                <div class="card-title movie-header-credits">
                    @if (info.HasDirectors)
                    {<div>Directed by: @(StringList(info.Directors))</div>}
                    @if (info.HasWriters)
                    {<div>Written by: @(StringList(info.Writers))</div>}
                    @if (!(info.Studio is null))
                    {<div>Studio: @info.Studio</div>}
                    @if (info.HasGenres)
                    {<div>Genres: @(StringList(info.Genres))</div>}
                </div>
            </div>
        </div>
        <div class="card-body movie-header-summary">@info.Summary</div>
    </div>
    <br />
    <CastMembers Roles="@info.Roles" />

    <style>
        .movie-header {
            display: grid;
            grid-template-columns: 250px 1fr;
            grid-template-rows: 1fr;
            grid-column-gap: 0px;
            grid-row-gap: 0px;
        }

        .movie-header-thumbnail {
            grid-area: 1 / 1 / 2 / 2;
        }

        movie-header-info {
            grid-area: 1 / 2 / 2 / 3;
        }
    </style>
}

@code {

    private LibraryItem? item { get; set; }
    private Metadata? info { get; set; }

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        item = await plexClient.GetItem(Id);
        info = item.MediaContainer.Metadata.FirstOrDefault();
        await base.OnParametersSetAsync();
    }

    private string StringList(IList<Subitem>? group)
    {
        bool FirstItem = true;
        string strT = "";

        if (group is null)
        {
            return strT;
        }

        foreach (var item in group)
        {
            if (FirstItem)
            {
                strT = item.Tag;
                FirstItem = false;
            }
            else
            {
                strT += $", {item.Tag}";
            }
        }

        return strT;
    }

}
