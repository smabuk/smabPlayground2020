@page "/plex/details/{Id:int}"
@using smab.PlexInfo.Models
@using smabPlayground2020.Shared.Helpers
@inject PlexInfoClient plexClient

@if (info == null)
{
    <p><em>Loading... item @Id</em></p>
}
else
{
    @*<div><h1>@info.Type</h1></div>*@
    <div class="card">
        <div class="card-header plex-header">
            <div class="plex-header-thumbnail">
                @if (String.IsNullOrEmpty(info.Thumb)) {
                    <img src="/images/tv.png" width="235px" height="153px" alt="..." />
                } else {
                    <img src="/PlexInfo/Photo?url=@(info.Thumb)&width=235&height=353" alt="Thumbnail">
                }
            </div>
            <div class="plex-header-info">
                @if (info.Type == "season") {
                    <div class="plex-header-title"><h1 class="card-title">@info.ParentTitle</h1></div>
                    <div class="plex-header-title"><h2 class="card-title">@info.Title</h2></div>
                } else if (info.Type == "episode") {
                    <div class="plex-header-title"><h1 class="card-title">@info.GrandparentTitle</h1></div>
                    <div class="plex-header-title"><h2 class="card-title">@info.Title</h2></div>
                    <div class="plex-header-title"><h3 class="card-title">@info.ParentTitle - Episode @info.Index</h3></div>
                } else {
                    <div class="plex-header-title"><h1 class="card-title">@info.Title</h1></div>
                }
                <div class="plex-header-info-lh">
                    @if (info.OriginallyAvailableAt is not null) {
                        DateTime originallyAvailableAt = DateTime.Parse(info.OriginallyAvailableAt);
                        if (originallyAvailableAt.Year > 1)
                        {
                            <div class="card-title">@originallyAvailableAt.ToDateLongMonthYearString()</div>
                        }
                    }
                    @if (info.Type == "episode") {
                        <div>@(info.Duration / 60000) min @info.ContentRating</div>
                    } else if (info.Type == "season") {
                        <div class="card-title">@info.LeafCount @((info.LeafCount == 1) ? "episode" : "episodes")</div>
                    } else {
                        <div class="card-title">@info.Year</div>
                        @if (info.HasCountries)
                        {<div>Countries: @(StringList(info.Countries))</div>}
                        <div>@(info.Duration / 60000) min @info.ContentRating</div>
                    }
                </div>
                <div class="plex-header-info-rh">
                    <div class="card-title">@info.Rating</div>
                </div>
                <hr />
                <div class="card-title plex-header-credits">
                    @if (info.HasDirectors)
                    {<div>Directed by: @(StringList(info.Directors))</div>}
                    @if (info.HasWriters)
                    {<div>Written by: @(StringList(info.Writers))</div>}
                    @if (info.Studio is not null)
                    {<div>Studio: @info.Studio</div>}
                    @if (info.HasGenres)
                    {<div>Genres: @(StringList(info.Genres))</div>}
                </div>
            </div>
        </div>
        <div class="card-body plex-header-summary">@info.Summary</div>
    </div>
    <br />
    @if (info.Type == "show")
    {
        <TVSeasons Seasons="@infoChildren" />
    } else if (info.Type == "season")
    {
        <TVEpisodes Episodes="@infoChildren" />
    }
    <CastMembers Roles="@info.Roles" />
}

@code {
    private LibraryItem? item;
    private Metadata? info;
    private List<Metadata> infoChildren = new();

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        item = await plexClient.GetItem(Id);
        info = item?.MediaContainer.Metadata?.FirstOrDefault() ?? new();
        if (info.Type == "show" || info.Type == "season")
        {
            infoChildren = (await plexClient.GetItemChildren(Id))?.MediaContainer.Metadata ?? new();
        }
    }

    private string StringList(IList<Subitem>? group)
    {
        bool FirstItem = true;
        string strT = "";

        if (group is not null)
        {
            foreach (var item in group)
            {
                if (FirstItem)
                {
                    strT = item.Tag;
                    FirstItem = false;
                }
                else
                {
                    strT += $", {item.Tag}";
                }
            }
        }

        return strT;
    }

}
